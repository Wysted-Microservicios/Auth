// Code generated by SQLBoiler 4.18.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("AccessToSessionUsingIDSessionSession", testAccessToOneSessionUsingIDSessionSession)
	t.Run("AuthToUserUsingIDUserUser", testAuthToOneUserUsingIDUserUser)
	t.Run("RecoveryCodeToUserUsingIDUserUser", testRecoveryCodeToOneUserUsingIDUserUser)
	t.Run("RecoveryTokenToUserUsingIDUserUser", testRecoveryTokenToOneUserUsingIDUserUser)
	t.Run("RolesUserToUserUsingIDUserUser", testRolesUserToOneUserUsingIDUserUser)
	t.Run("SessionToAuthUsingIDAuthAuth", testSessionToOneAuthUsingIDAuthAuth)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {
	t.Run("UserToAuthUsingIDUserAuth", testUserOneToOneAuthUsingIDUserAuth)
}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("AuthToIDAuthSessions", testAuthToManyIDAuthSessions)
	t.Run("SessionToIDSessionAccesses", testSessionToManyIDSessionAccesses)
	t.Run("UserToIDUserRecoveryCodes", testUserToManyIDUserRecoveryCodes)
	t.Run("UserToIDUserRecoveryTokens", testUserToManyIDUserRecoveryTokens)
	t.Run("UserToIDUserRolesUsers", testUserToManyIDUserRolesUsers)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("AccessToSessionUsingIDSessionAccesses", testAccessToOneSetOpSessionUsingIDSessionSession)
	t.Run("AuthToUserUsingIDUserAuth", testAuthToOneSetOpUserUsingIDUserUser)
	t.Run("RecoveryCodeToUserUsingIDUserRecoveryCodes", testRecoveryCodeToOneSetOpUserUsingIDUserUser)
	t.Run("RecoveryTokenToUserUsingIDUserRecoveryTokens", testRecoveryTokenToOneSetOpUserUsingIDUserUser)
	t.Run("RolesUserToUserUsingIDUserRolesUsers", testRolesUserToOneSetOpUserUsingIDUserUser)
	t.Run("SessionToAuthUsingIDAuthSessions", testSessionToOneSetOpAuthUsingIDAuthAuth)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {
	t.Run("UserToAuthUsingIDUserAuth", testUserOneToOneSetOpAuthUsingIDUserAuth)
}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("AuthToIDAuthSessions", testAuthToManyAddOpIDAuthSessions)
	t.Run("SessionToIDSessionAccesses", testSessionToManyAddOpIDSessionAccesses)
	t.Run("UserToIDUserRecoveryCodes", testUserToManyAddOpIDUserRecoveryCodes)
	t.Run("UserToIDUserRecoveryTokens", testUserToManyAddOpIDUserRecoveryTokens)
	t.Run("UserToIDUserRolesUsers", testUserToManyAddOpIDUserRolesUsers)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {}
